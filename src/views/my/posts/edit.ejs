<!-- src/views/posts/edit.ejs -->

<%- contentFor('styles') %>
<style>
  .preview-image {
    width: 100px;
    height: auto;
}

</style>
<%- contentFor('scripts') %>
<script>
  const id = window.location.pathname.split('/').reverse()[1]

  const generateTitle = ({ isLoading, post } = {}) => {
    if (isLoading) return `<div class="text-center">Loading...</div>`
    if (!post) return `<h1 class="text-center mb-3">Post ${id} Post Not Found!</h1>`

    return `<h1 class="text-center mb-3">Edit Post ${id}</h1>`
}

const generateImageInputs = (post, errors) => {
  const images = post?.images || []
  const imagesErrs = errors?.images || []

    return images.map((image, i) => {
    return `
      <div class="mb-3">
        <label for="post-image-${i}" class="form-label">Image ${i + 1}</label>
        <button class="delete-image btn btn-danger btn-sm float-end" data-index="${i}" type="button">Delete</button>
        <input
          id="post-image-${i}"
          class="form-control ${imagesErrs[i]?.name && 'is-invalid'}"
          name="images[${i}][name]"
          value="${image?.name || ''}"
        ></input>
        <div class="invalid-feedback">${imagesErrs[i]?.name || ''}</div>
      </div>
    `
  }).join('')
}

const generateForm = ({ isLoading, post, errors } = {}) => {
  if (isLoading || !post) return ''

  return `
    <div class="row">
      <div id="form-wrapper" class="col-12 col-md-10 offset-md-1 col-lg-8 offset-lg-2">
        <form id="post-edit-form">
          <div class="mb-3">
            <label for="post-content" class="form-label">Content</label>
            <textarea
              id="post-content"
              class="form-control ${errors?.content && 'is-invalid'}"
              name="content"
              rows="3"
            >${post?.content || ''}</textarea>
            <div class="invalid-feedback">${errors?.content || ''}</div>
          </div>

            <div class="mb-3 text-center">
              <div class="mb-2 fw-bold">Images (Optional)</div>
            ${generateImageInputs(post, errors)}
            <button id="add-post-image" button class="btn btn-outline-primary" type="button" id="inputGroupFileAddon03">Add Image</button>
          </div>

          <div class="mb-3">
            <input type="file" class="file-input form-control" name="images[0][url]">
          </div>

          <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
            <input type="submit" class="btn-check" name="btnradio" id="btnradio1" autocomplete="off" checked>
            <label class="btn btn-outline-primary" for="btnradio1">Submit</label>
          </div>
        </form>
      </div>
    </div>
  `
  if (user?.image?.constructor?.name === 'File') {
    const $image = $('#user-image').attr('class', `form-control ${errors?.image && 'is-invalid'}`)
    $form.find('#user-image').replaceWith($image)
  }
  return $form
}


const generatePage = (info) => {
  const $page = $('#pages-my-posts-edit')
  const $form = generateForm(info)

  $page.html('').append($form)
}

const getPost = () => {
  axios({
    method: 'GET',
    url: `/api/my/posts/${id}`
  }).then((resp) => {
    generatePage({ post: resp.data })
  }).catch((err) => {
    generatePage()
  })
}

const handleSubmit = (e) => {
  e.preventDefault()

  const data = new FormData(e.currentTarget)
  $('#post-edit-form button[type="submit"]').attr('disabled', true)

  axios({
    method: 'PUT',
    url: `/api/my/posts/${id}`,
    data
  }).then((resp) => {
    window.location.href = `/my/posts/${resp.data.id}`
  }).catch((err) => {
    generatePage({ post: parseFormData(data), errors: err.response.data })
  })
}

const handleFileSelection = (e) => {
  const [file] = e.currentTarget.files

  if (file) {
    const url = URL.createObjectURL(file)
    $(e.currentTarget).before(`<img class="preview-image" src="${url}">`)
  }
}

  const handleAddImage = () => {
    const data = parseFormData(new FormData($('#post-edit-form')[0]))
    data.image = [...data?.images || [], { name: '' }]

    generatePage({ post: data })
  }

  const handleDeleteImage = (e) => {
    const data = parseFormData(new FormData($('#post-edit-form')[0]))
    data.images.splice($(e.currentTarget).data('index'), 1)

    generatePage({ post: data })
  }

$(document).ready(() => {
  generatePage({ isLoading: true })
  getPost()
  $('#pages-my-posts-edit').on('submit', '#post-edit-form', handleSubmit)
  $('#pages-my-posts-edit').on('change', '.file-input', handleFileSelection)
  $('#pages-posts-edit').on('click', '#add-post-image', handleAddImage)
  $('#pages-posts-edit').on('click', '.delete-image', handleDeleteImage)
})
</script>

<%- contentFor('body') %>
<div id="pages-my-posts-edit" class="container"></div>
